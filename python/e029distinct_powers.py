"""
Project Euler #29: Distinct Powers

From the description:
    How many distinct terms are in the sequence generated by
    a**b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
"""

from __future__ import (absolute_import, print_function)
from ensure_integer import ensure_integer


class NonOddInputError(Exception):
    pass


def distinct_powers(base_max=100, power_max=100):
    """
    Return the number of distinct terms in the sequence a ** b

    For 2 ≤ a ≤ base_max and 2 ≤ b ≤ power_max

    Args:
        base_max (int): The max value for a.
        power_max (int): The max value for b.

    Returns:
        The number of distinct terms.
    """

    ensure_integer(base_max, greater_than=1, var_name='base_max')
    ensure_integer(power_max, greater_than=1, var_name='power_max')

    power_terms = []
    for a in range(2, base_max + 1):
        for b in range(2, power_max + 1):
            term = a ** b
            if power_terms.count(term) == 0:
                power_terms.append(term)
    return len(power_terms)


if __name__ == '__main__':
    a = 100
    b = 100
    print('The number of distinct terms in the sequence a ** b where'
          ' a = {}, b = {}: {}'.format(a, b, distinct_powers(a, b)))
